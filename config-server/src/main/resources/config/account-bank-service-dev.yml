spring:
  application:
    name: account-bank-service
  datasource:
    url: jdbc:h2:file:/database/ACCOUNT;AUTO_SERVER=TRUE
#    url: jdbc:h2:mem:ACCOUNT
    username: sa
    password: password
    driverClassName: org.h2.Driver
    jpa:
      spring.jpa.database-platform: org.hibernate.dialect.H2Dialect
  h2:
    console.enabled: true
  flyway:
    enabled: true
  cloud:
    stream:
      function:
        definition: getAccounts; commitTransaction; commitCardTransaction
      bindings:
        getAccounts-in-0:
          destination: client
          group: accountsID
        getAccounts-out-0:
          destination: client
        commitTransaction-in-0:
          destination: transfer
          group: transactionInit
        commitTransaction-out-0:
          destination: transfer
        commitCardTransaction-in-0:
          destination: transfer
          group: cardTransferInit
        commitCardTransaction-out-0:
          destination: transfer
      rabbit:
        bindings:
          getAccounts-in-0:
            consumer:
              bindQueue: false
              declareExchange: false
              queueNameGroupOnly: true
              exchangeType: direct
              bindingRoutingKey: accountsID
          getAccounts-out-0:
            producer:
              bindQueue: false
              declareExchange: false
              queueNameGroupOnly: true
              exchangeType: direct
              routingKeyExpression: '''accounts'''
          commitTransaction-in-0:
            consumer:
              acknowledgeMode: manual
              bindQueue: false
              declareExchange: false
              queueNameGroupOnly: true
              exchangeType: direct
              bindingRoutingKey: transactionInit
              autoBindDlq: true
          commitTransaction-out-0:
            producer:
              bindQueue: false
              declareExchange: false
              queueNameGroupOnly: true
              exchangeType: direct
              routingKeyExpression: '''transactionStatus'''
          commitCardTransaction-in-0:
            consumer:
              acknowledgeMode: manual
              # bindQueue: false
              # declareExchange: false
              queueNameGroupOnly: true
              exchangeType: direct
              bindingRoutingKey: cardTransferInit
              autoBindDlq: true
          commitCardTransaction-out-0:
            producer:
              bindQueue: false
              declareExchange: false
              queueNameGroupOnly: true
              exchangeType: direct
              routingKeyExpression: '''updateCardTransfer'''
  rabbitmq:
    host: 127.0.0.1
    port: 5672
    username: guest
    password: guest

flyway:
  user: sa
  password: password
  schemas: core_bank-schema
#  url: jdbc:h2:mem:ACCOUNT
  url: jdbc:h2:file:/database/ACCOUNT;AUTO_SERVER=TRUE


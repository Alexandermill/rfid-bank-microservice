server.port=0

# Application name
spring.application.name=account-bank-service

# Spring cloud config
spring.profiles.active=dev
spring.config.import=optional:configserver:http://avante:s3cr3t@localhost:8888

# Eureka
eureka.client.serviceUrl.defaultZone=${EUREKA_URI:http://localhost:8761/eureka}
eureka.instance.preferIpAddress=true


#spring.cloud.stream.function.definition=getAccounts; commitTransaction
#spring.cloud.stream.bindings.getAccounts-in-0.destination=account
#spring.cloud.stream.bindings.getAccounts-in-0.group=clientInformation
#spring.cloud.stream.bindings.getAccounts-out-0.destination=client
#
#spring.cloud.stream.bindings.commitTransaction-in-0.destination=transactioninit
#spring.cloud.stream.bindings.commitTransaction-in-0.group=transaction
#spring.cloud.stream.bindings.commitTransaction-out-0.destination=transactionstatus


#spring.cloud.stream.function.definition=getAccounts; commitTransaction
##Function getAccounts
##Consumer
#spring.cloud.stream.bindings.getAccounts-in-0.destination=client
#spring.cloud.stream.bindings.getAccounts-in-0.group=accountsID
#spring.cloud.stream.rabbit.bindings.getAccounts-in-0.consumer.bindQueue=false
#spring.cloud.stream.rabbit.bindings.getAccounts-in-0.consumer.declareExchange=false
#spring.cloud.stream.rabbit.bindings.getAccounts-in-0.consumer.queueNameGroupOnly=true
#spring.cloud.stream.rabbit.bindings.getAccounts-in-0.consumer.exchangeType=direct
#spring.cloud.stream.rabbit.bindings.getAccounts-in-0.consumer.bindingRoutingKey=accountsID
##Producer
#spring.cloud.stream.bindings.getAccounts-out-0.destination=client
#spring.cloud.stream.rabbit.bindings.getAccounts-out-0.producer.bindQueue=false
#spring.cloud.stream.rabbit.bindings.getAccounts-out-0.producer.declareExchange=false
#spring.cloud.stream.rabbit.bindings.getAccounts-out-0.producer.queueNameGroupOnly=true
#spring.cloud.stream.rabbit.bindings.getAccounts-out-0.producer.exchangeType=direct
#spring.cloud.stream.rabbit.bindings.getAccounts-out-0.producer.routingKeyExpression='accounts'
##Function commitTransaction
##Consumer
#spring.cloud.stream.bindings.commitTransaction-in-0.destination=transfer
#spring.cloud.stream.bindings.commitTransaction-in-0.group=transactionInit
#spring.cloud.stream.rabbit.bindings.commitTransaction-in-0.consumer.bindQueue=false
#spring.cloud.stream.rabbit.bindings.commitTransaction-in-0.consumer.declareExchange=false
#spring.cloud.stream.rabbit.bindings.commitTransaction-in-0.consumer.queueNameGroupOnly=true
#spring.cloud.stream.rabbit.bindings.commitTransaction-in-0.consumer.exchangeType=direct
#spring.cloud.stream.rabbit.bindings.commitTransaction-in-0.consumer.bindingRoutingKey=transactionInit
##Produser
#spring.cloud.stream.bindings.commitTransaction-out-0.destination=transfer
#spring.cloud.stream.rabbit.bindings.commitTransaction-out-0.producer.bindQueue=false
#spring.cloud.stream.rabbit.bindings.commitTransaction-out-0.producer.declareExchange=false
#spring.cloud.stream.rabbit.bindings.commitTransaction-out-0.producer.queueNameGroupOnly=true
#spring.cloud.stream.rabbit.bindings.commitTransaction-out-0.producer.exchangeType=direct
#spring.cloud.stream.rabbit.bindings.commitTransaction-out-0.producer.routingKeyExpression='transactionStatus'
#
#spring.rabbitmq.host=127.0.0.1
#spring.rabbitmq.port=5672
#spring.rabbitmq.username=guest
#spring.rabbitmq.password=guest
